AWSTemplateFormatVersion: 2010-09-09
Description: Create wordpress environment

Parameters:
  VpcCidr:
    Type: String
    Default: 10.0.0.0/26

  PublicSubnetCidr:
    Type: String
    Default: 10.0.0.0/28

  DatabaseSubnetACidr:
    Type: String
    Default: 10.0.0.16/28

  DatabaseSubnetCCidr:
    Type: String
    Default: 10.0.0.32/28

  AMIID:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

  WordPressInstanceType:
    Type: String
    Default: t2.micro

  DatabaseInstanceType:
    Type: String
    Default: 

  SSH_PEM_Filename:
    Type: String
    Default: tuimac

  TagKey:
    Type: String
    Default: Environment

  TagValue:
    Type: String
    Default: Production

Resources:
  # VPC
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
        - Key: Name
          Value: WordPress
 
  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
        - Key: Name
          Value: WordPress

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc

  # Subnet
  WordPressSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref PublicSubnetCidr
      AvailabilityZone: ap-northeast-1a
      MapPublicIpOnLaunch: false
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
        - Key: Name
          Value: WordPress-a

  DatabaseSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref DatabaseSubnetACidr
      AvailabilityZone: ap-northeast-1a
      MapPublicIpOnLaunch: false
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
        - Key: Name
          Value: Database-a

  DatabaseSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref DatabaseSubnetCCidr
      AvailabilityZone: ap-northeast-1c
      MapPublicIpOnLaunch: false
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
        - Key: Name
          Value: Database-c

  # RouteTable
  WordPressRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
        - Key: Name
          Value: WordPress

  WordPressRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref WordPressRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  WordPressRouteTableAccociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref WordPressRouteTable
      SubnetId: !Ref WordPressSubnet

  DatabaseRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
        - Key: Name
          Value: Database

  DatabaseRouteTableAccociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref DatabaseRouteTable
      SubnetId: !Ref DatabaseSubnetA

  DatabaseRouteTableAccociationC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref DatabaseRouteTable
      SubnetId: !Ref DatabaseSubnetC

  # Security Group
  WordPressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: WordPress
      GroupDescription: WordPress Firewall
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: Inbound HTTP from ANY
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: Inbound HTTPS from ANY
      SecurityGroupEgress:
        - IpProtocol: udp
          FromPort: 53
          ToPort: 53
          CidrIp: 10.0.0.2/32
          Description: 
        - IpProtocol: -1
          CidrIp: 10.0.0.0/64
          Description: 
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
        - Key: Name
          Value: WordPress

  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Database
      GroupDescription: Database Firewall
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref WordPressSecurityGroup
          Description: Inbound ODBC from WordPress Container Server
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
        - Key: Name
          Value: Database

  # RDS
  Type: AWS::RDS::DBSubnetGroup
  Properties:
    DBSubnetGroupDescription: For WordPress Database
    SubnetIds:
      - !Ref DatabaseSubnetA
      - !Ref DatabaseSubnetC
    Tags:
      - Key: !Ref TagKey
        Value: !Ref TagValue
      - Key: Name
        Value: WordPress

  Type: AWS::RDS::DBInstance
  Properties:
    AllocatedStorage: 20
    AllowMajorVersionUpgrade: true
    AutoMinorVersionUpgrade: true
    AvailabilityZone: ap-northeast-1a



  # EC2 Instance
  WordPress:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AMIID
      InstanceType: !Ref WordPressInstanceType
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeleteOnTermination: true
          Description: WordPress Instance Primary ENI
          PrivateIpAddresses:
            - Primary: true
          Groups: !Ref WordPressSecurityGroup
          SubnetId: !Ref WordPressSubnet
      KeyName: !Ref SSH_PEM_Filename
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
        - Key: Name
          Value: WordPress

  # Elastic IP
  WordPressEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref WordPress
	
